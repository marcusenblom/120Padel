[{"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/index.tsx":"1","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/reportWebVitals.ts":"2","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/App.tsx":"3","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/models/serieModel.tsx":"4","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/models/userModel.tsx":"5","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/home/home.tsx":"6","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/home/lastMatchesPlayed/lastMatchesPlayed.tsx":"7","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/home/userQuickStats/userQuickStats.tsx":"8","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/home/userQuickStats/quickStat/quickStat.tsx":"9","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/home/homePageButton/homePageButton.tsx":"10","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/registerMatch/registerMatch.tsx":"11","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/header/header.tsx":"12","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/navbar/navbar.tsx":"13","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/footer/footer.tsx":"14","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/db.tsx":"15","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/userProfile/userProfile.tsx":"16","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/userProfile/profileStat/profileStat.tsx":"17","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/userProfile/profileStatGame/profileStatGame.tsx":"18","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serie.tsx":"19","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/playedMatches/addMatch/addMatch.tsx":"20","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/playedMatches/singlePlayedMatch/singlePlayedMatch.tsx":"21","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/playedMatches/playedMatches.tsx":"22","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieSettings/serieSettings.tsx":"23","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieNavigation/serieNavigation.tsx":"24","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/playedMatches/singlePlayedMatch/matchPlayerCard/matchPlayerCard.tsx":"25","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/standings/standings.tsx":"26","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieSettings/addPlayerToSerie/addPlayerToSerie.tsx":"27","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieSettings/changeSerieName/changeSerieName.tsx":"28","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/standings/playerStanding/playerStanding.tsx":"29","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieSettings/addPlayerToSerie/playerSearchBar/playerSearchBar.tsx":"30","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieSettings/addPlayerToSerie/playersToAdd/playersToAdd.tsx":"31","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieSettings/addPlayerToSerie/playersToAdd/singlePlayerToAdd/singlePlayerToAdd.tsx":"32","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/series.tsx":"33","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/noSerie/noSerie.tsx":"34","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/allSeries/allSeries.tsx":"35"},{"size":500,"mtime":1607335546353,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":1607335546355,"results":"38","hashOfConfig":"37"},{"size":957,"mtime":1610112207097,"results":"39","hashOfConfig":"37"},{"size":1295,"mtime":1608568561621,"results":"40","hashOfConfig":"37"},{"size":845,"mtime":1610363352734,"results":"41","hashOfConfig":"37"},{"size":1953,"mtime":1610194820225,"results":"42","hashOfConfig":"37"},{"size":1925,"mtime":1610194874314,"results":"43","hashOfConfig":"37"},{"size":3684,"mtime":1609856203000,"results":"44","hashOfConfig":"37"},{"size":1502,"mtime":1610191566199,"results":"45","hashOfConfig":"37"},{"size":402,"mtime":1609153258000,"results":"46","hashOfConfig":"37"},{"size":2894,"mtime":1610112103486,"results":"47","hashOfConfig":"37"},{"size":153,"mtime":1609333832415,"results":"48","hashOfConfig":"37"},{"size":613,"mtime":1609348747513,"results":"49","hashOfConfig":"37"},{"size":157,"mtime":1607336806000,"results":"50","hashOfConfig":"51"},{"size":119,"mtime":1610194948679,"results":"52","hashOfConfig":"37"},{"size":2408,"mtime":1609767270843,"results":"53","hashOfConfig":"37"},{"size":251,"mtime":1609360816992,"results":"54","hashOfConfig":"37"},{"size":445,"mtime":1609364574660,"results":"55","hashOfConfig":"37"},{"size":4825,"mtime":1610365226946,"results":"56","hashOfConfig":"37"},{"size":10877,"mtime":1610112785172,"results":"57","hashOfConfig":"37"},{"size":2047,"mtime":1610112800553,"results":"58","hashOfConfig":"37"},{"size":2036,"mtime":1610113904405,"results":"59","hashOfConfig":"37"},{"size":905,"mtime":1610112103493,"results":"60","hashOfConfig":"37"},{"size":1142,"mtime":1609799697404,"results":"61","hashOfConfig":"37"},{"size":1245,"mtime":1610113687986,"results":"62","hashOfConfig":"37"},{"size":1312,"mtime":1610366824313,"results":"63","hashOfConfig":"37"},{"size":2066,"mtime":1610113815364,"results":"64","hashOfConfig":"37"},{"size":988,"mtime":1610113922524,"results":"65","hashOfConfig":"37"},{"size":1959,"mtime":1610373896748,"results":"66","hashOfConfig":"37"},{"size":410,"mtime":1609853674035,"results":"67","hashOfConfig":"37"},{"size":1003,"mtime":1610113878920,"results":"68","hashOfConfig":"37"},{"size":443,"mtime":1609766064779,"results":"69","hashOfConfig":"37"},{"size":2366,"mtime":1610365667087,"results":"70","hashOfConfig":"37"},{"size":195,"mtime":1610190773489,"results":"71","hashOfConfig":"37"},{"size":841,"mtime":1610365500202,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"7wb0j7",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"75"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1h7v94b",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"75"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/index.tsx",[],["149","150"],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/reportWebVitals.ts",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/App.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/models/serieModel.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/models/userModel.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/home/home.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/home/lastMatchesPlayed/lastMatchesPlayed.tsx",["151"],"import React, { useState } from \"react\";\nimport { PlayedMatchModel, PlayersModel, SerieModel } from \"../../../models/serieModel\";\nimport UserModel from \"../../../models/userModel\";\nimport \"../../../scss/_lastMatchesPlayed.scss\";\nimport SinglePlayedMatch from \"../../series/serie/playedMatches/singlePlayedMatch/singlePlayedMatch\";\n\ninterface ILastMatchesPlayed{\n  player: UserModel;\n  playerSeries: SerieModel[];\n  playerMatches: PlayedMatchModel[];\n  matchesExist: boolean;\n}\n\nexport default function LastMatchesPlayed(props: ILastMatchesPlayed) {\n\n  let noGamesMessage = \"laddar matcher..\";\n\n  let playersMatches = props.playerMatches;\n\n  // Sort on date and only show last 3 matches played\n  if (playersMatches.length > 0) {\n    playersMatches.sort((a, b) => (a.date < b.date) ? 1 : -1);\n\n    if (playersMatches.length > 3) {\n      playersMatches = playersMatches.slice(0, 3);\n    }\n  }\n\n  if (!props.matchesExist) {\n    noGamesMessage = \"Du har ännu inga registrerade matcher. Klicka på knappen \\\"Registrera match\\\" för att komma igång\";\n  }\n  \n  \n  let singlePlayedMatches = playersMatches.map(match => {\n    let serieName = \"\";\n    let players: PlayersModel[] = [];\n\n    props.playerSeries.forEach(serie => {\n      if (serie.serieId === match.serie) {\n        serieName = serie.name;\n        players = serie.players;\n      }\n    });\n    return <div className=\"single-played-match\" key={match.matchId}><SinglePlayedMatch match={match} showSerieName={true} serieName={serieName} players={players}/></div>\n\n  });\n\n  return (\n    <div id=\"last-matches-container\">\n      <div className=\"last-matches-header\">\n        <h2>Senaste matcher</h2>\n        {/* <span>Se alla</span> */}\n      </div>\n\n      {playersMatches.length > 0 ?\n      <div className=\"last-matches\">\n        {singlePlayedMatches}\n      </div>\n      :\n      <div className=\"no-games\">\n        <p>{noGamesMessage}</p>\n      </div>\n      }\n\n    </div>\n  );\n}","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/home/userQuickStats/userQuickStats.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/home/userQuickStats/quickStat/quickStat.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/home/homePageButton/homePageButton.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/registerMatch/registerMatch.tsx",["152"],"import axios from \"axios\";\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { PlayersModel, SerieModel } from \"../../models/serieModel\";\nimport UserModel from \"../../models/userModel\";\nimport AddMatch from \"../serie/playedMatches/addMatch/addMatch\";\n\nimport DATABASE_URL from \"../../db\";\n\nexport default function RegisterMatch() {\n\n  const [user, setUser] = useState(new UserModel());\n  const [playerSeries, setPlayerSeries] = useState([new SerieModel()]);\n  const [serieIdChosen, setSerieIdChosen] = useState(0);\n  const [players, setPlayers] = useState([new PlayersModel()])\n  const [matchRegistered, setMatchRegistered] = useState(false);\n  const [creatingGame, setCreatingGame] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`${DATABASE_URL}/`)\n      .then(axiosObject => {\n        let userData = axiosObject.data;\n\n        setUser(userData);\n        \n        fetchPlayerSeries(userData.userId);\n    });\n  }, []);\n\n  function fetchPlayerSeries(userId: Number){\n\n    axios\n    .get(`${DATABASE_URL}/userSeries/${userId}`)\n    .then(axiosObject => {\n      let serieData = axiosObject.data;\n      setPlayerSeries(serieData);\n      setSerieIdChosen(serieData[0].serieId);\n      setPlayers(serieData[0].players);\n    });\n  }\n\n  function postMatchToSerie(matchData: {\n    date: Date;\n    serieId: Number;\n    winners: Number[];\n    losers: Number[];\n    winnersGame: Number;\n    losersGame: Number}\n    ){\n\n    setCreatingGame(true);\n    axios.post(`${DATABASE_URL}/addMatch`, matchData).then(response => {\n      console.log(response);\n      setCreatingGame(false);\n      setMatchRegistered(true);\n      setMatchRegistered(false);\n    }).catch(function(err) {\n      console.log(err);\n      setCreatingGame(false);\n    });\n  }\n\n  function changeSerie(e: ChangeEvent<HTMLSelectElement>){\n    let serieFromSelect = Number(e.currentTarget.value);\n    setSerieIdChosen(serieFromSelect);\n\n    let playersToFind = playerSeries.find(serie => serie.serieId === serieFromSelect)?.players;\n    if (playersToFind) {\n      setPlayers(playersToFind);\n    }\n\n  }\n\n  let serieOptions = playerSeries.map(serie => {\n    return <option key={serie.serieId} value={serie.serieId}>{serie.name}</option>\n  });\n  \n  return (\n    <div id=\"register-match-container\">\n      <div className=\"header-container\">\n          <h2>Registrera match</h2>\n      </div>\n      <div className=\"serie-select-container\">\n        <h3>Serie</h3>\n          <div className=\"serie-select\">\n            <select name=\"serie\" id=\"serie\" className=\"serie-select\" onChange={changeSerie}>\n              {serieOptions}\n            </select>\n            <i className=\"fas fa-chevron-down\"></i>\n          </div>\n      </div>\n\n      <AddMatch serieId={serieIdChosen} players={players} updateParentWithPostData={postMatchToSerie} matchRegistered={matchRegistered} creatingGame={creatingGame}/>\n    </div>\n  );\n}","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/header/header.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/navbar/navbar.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/footer/footer.tsx",[],["153","154"],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/db.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/userProfile/userProfile.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/userProfile/profileStat/profileStat.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/userProfile/profileStatGame/profileStatGame.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serie.tsx",["155"],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/playedMatches/addMatch/addMatch.tsx",["156"],"import { ChangeEvent, useEffect, useState } from \"react\";\nimport \"../../../../../scss/_addMatch.scss\";\nimport { PlayersModel } from \"../../../../../models/serieModel\";\nimport moment from \"moment\";\nimport ball from \"../../../../../images/ball.svg\";\n\ninterface IAddMatchProps{\n  serieId: Number;\n  players: PlayersModel[];\n  updateParentWithPostData(data: any): void;\n  matchRegistered: Boolean;\n  creatingGame: Boolean;\n}\n\nexport default function AddMatch(props: IAddMatchProps) {\n  const [date, setDate] = useState(new Date());\n  const [teamOnePlayerOne, setTeamOnePlayerOne] = useState(0);\n  const [teamOnePlayerTwo, setTeamOnePlayerTwo] = useState(0);\n  const [teamTwoPlayerOne, setTeamTwoPlayerOne] = useState(0);\n  const [teamTwoPlayerTwo, setTeamTwoPlayerTwo] = useState(0);\n  const [teamOneGames, setTeamOneGames] = useState(99);\n  const [teamTwoGames, setTeamTwoGames] = useState(99);\n  const [gameCreated, setGameCreated] = useState(false);\n  const [gameRegistered, setGameRegistered] = useState(false); \n\n  const [duplicatePlayerError, setDuplicatePlayerError] = useState(false);\n  const [missingGameError, setMissingGameError] = useState(false);\n  const [noWinnerError, setNoWinnerError] = useState(false);\n  const [invalidGameError, setInvalidGameError] = useState(false);\n  \n  useEffect(() => {\n    clearState();\n  }, [gameCreated]);\n\n  useEffect(() => {\n    if (props.matchRegistered) {\n      setGameRegistered(true);\n      setTimeout(() => {\n        setGameRegistered(false);\n      }, 5000);\n    }\n  }, [props.matchRegistered]);\n\n  function clearState(){ \n    setTeamOneGames(99);\n    setTeamTwoGames(99);\n\n    setGameCreated(false);\n\n    console.log(teamOnePlayerOne);\n  }\n  \n  function updateDate(e: ChangeEvent<HTMLInputElement>){\n    let inputDate = e.currentTarget.value;\n    setDate(new Date(inputDate));\n  }\n  let today = new Date().toISOString().split(\"T\")[0];\n\n  function changeTeamOnePlayerOne(e: ChangeEvent<HTMLSelectElement>){\n    setTeamOnePlayerOne(Number(e.currentTarget.value));\n    \n  }\n\n  function changeTeamOnePlayerTwo(e: ChangeEvent<HTMLSelectElement>){\n    setTeamOnePlayerTwo(Number(e.currentTarget.value));\n  }\n\n  function changeTeamTwoPlayerOne(e: ChangeEvent<HTMLSelectElement>){\n    setTeamTwoPlayerOne(Number(e.currentTarget.value));\n  }\n\n  function changeTeamTwoPlayerTwo(e: ChangeEvent<HTMLSelectElement>){\n    setTeamTwoPlayerTwo(Number(e.currentTarget.value));\n  }\n\n  function changeTeamOneGame(e: ChangeEvent<HTMLSelectElement>){\n    let gameFromSelect = parseInt(e.currentTarget.value);\n    setTeamOneGames(gameFromSelect);\n  }\n\n  function changeTeamTwoGame(e: ChangeEvent<HTMLSelectElement>){\n    let gameFromSelect = parseInt(e.currentTarget.value);\n    setTeamTwoGames(gameFromSelect);\n  }\n\n  class DataToParentModel{\n    date: Date;\n    serieId: Number;\n    winners: Number[];\n    losers: Number[];\n    winnersGame: Number;\n    losersGame: Number;\n    constructor(date: Date, serieId: Number, winners: Number[], losers: Number[], winnersGame: Number, losersGame: Number){\n      this.date = date;\n      this.serieId = serieId;\n      this.winners = winners;\n      this.losers = losers;\n      this.winnersGame = winnersGame;\n      this.losersGame = losersGame;\n    }\n  }\n\n  function getDataToSend(){\n    if (teamOneGames > teamTwoGames) {\n      let data = new DataToParentModel(\n        date, \n        props.serieId, \n        [teamOnePlayerOne, teamOnePlayerTwo], \n        [teamTwoPlayerOne, teamTwoPlayerTwo], \n        teamOneGames, \n        teamTwoGames\n      );\n      return data;\n    }\n    if (teamOneGames < teamTwoGames) {\n      let data = new DataToParentModel(\n        date, \n        props.serieId, \n        [teamTwoPlayerOne, teamTwoPlayerTwo], \n        [teamOnePlayerOne, teamOnePlayerTwo], \n        teamTwoGames, \n        teamOneGames\n      );\n      return data;\n    }\n  }\n  \n  function sendNewMatchDataToParent(e: any){\n    let data = getDataToSend();\n\n    let winners = confirmIfWinnerExist(data);\n    let defaultGames = confirmIfGameExists(data);\n    let duplicatePlayers = confirmNoDuplicatePlayers(data);\n    let validResult = confirmValidResult(data);\n\n    if (winners && defaultGames && duplicatePlayers && validResult) {\n      console.log(\"skapar match\");\n      props.updateParentWithPostData(data);\n      setGameCreated(true);\n    }\n  }\n\n  let listOfPlayers = props.players.map(player => {\n    return <option className=\"select-option\" key={player.user.userName} value={player.user.userId}>{player.user.userName}</option>\n  });\n\n  let listOfGameTeamOne = [];\n  let listOfGameTeamTwo = [];\n\n  for (let i = 0; i < 8; i++) {\n    let valueOne = i;\n    listOfGameTeamOne.push(<option key={i} value={valueOne}>{i}</option>);\n    \n    let valueTwo = i;\n    listOfGameTeamTwo.push(<option key={i} value={valueTwo}>{i}</option>);\n  }\n\n  // Error messages\n  let noWinnerErrorMessage = \"En match måste innehålla vinnare\";\n  let missingGameErrorMessage = \"Du måste fylla i korrekt vunna game\";\n  let playerErrorMessage = \"En spelare kan ej registrerars två gånger\";\n  let invalidGameErrorMEssage = \"Ej tillåten vinstmarginal\"\n\n  function confirmNoDuplicatePlayers(data: DataToParentModel | undefined){\n    let players = [teamOnePlayerOne, teamOnePlayerTwo, teamTwoPlayerOne, teamTwoPlayerTwo];\n    let startLength = players.length;\n    let newLength = new Set(players).size;\n    if (startLength !== newLength) {\n      setDuplicatePlayerError(true);\n      return false;\n    } else {\n      setDuplicatePlayerError(false);\n      return true;\n    }\n  };\n\n  function confirmIfWinnerExist(data: DataToParentModel | undefined){\n    if (data?.losersGame === data?.winnersGame) {\n      setNoWinnerError(true);\n      return false;\n    } else {\n      setNoWinnerError(false);\n      return true;\n    }\n  };\n  function confirmIfGameExists(data: DataToParentModel | undefined){\n    if (data?.losersGame === 99 || data?.winnersGame === 99) {\n      setMissingGameError(true);\n      return false;\n    } else {\n      setMissingGameError(false);\n      return true;\n    }\n  };\n  function confirmValidResult(data: DataToParentModel | undefined){\n    let twoGameDifferenceAtSevenGamesWon = ((data?.losersGame === 7 && data?.winnersGame >= 5) || (data?.winnersGame === 7 && data?.losersGame >= 5));\n    \n    let twoGameDifferenceAtSixGamesWon = ((data?.losersGame === 6 && data?.winnersGame < 5) || (data?.winnersGame === 6 &&  data?.losersGame < 5));\n\n    if (twoGameDifferenceAtSevenGamesWon || twoGameDifferenceAtSixGamesWon) {\n      setInvalidGameError(false);\n      return true;\n    } else {\n      setInvalidGameError(true);\n      return false;\n    }\n  }\n\n\n  let registeringGame = (\n    <span className=\"registering\">Registrerar match..</span>\n  );\n  let registeredGame = (\n    <span className=\"registered\">Match registrerad!</span>\n  );\n\n\n  return (\n    <div id=\"add-match\">\n      <div className=\"add-date\">\n        <h3>Datum</h3>\n        <div className=\"date-picker-container\">\n          <input className=\"date-picker\" type=\"date\" max={today} value={moment(date).format('YYYY-MM-DD')} onChange={updateDate}/>\n          <i className=\"fas fa-chevron-down\"></i>\n          <i className=\"far fa-calendar\"></i>\n        </div>\n      </div>\n      <div className=\"add-teams\">\n        <div className=\"add-team\">\n          <h3>Lag 1</h3>\n          <div className=\"player-select-container\">\n            <div className=\"select-wrapper\">\n              <select name=\"teamOnePlayerOne\" id=\"teamOnePlayerOne\" className=\"player-select\" onChange={changeTeamOnePlayerOne}>\n                <option value=\"\">Välj spelare</option>\n                {listOfPlayers}\n              </select>\n              <i className=\"fas fa-chevron-down\"></i>\n            </div>\n            <div className=\"select-wrapper\">\n              <select name=\"teamOnePlayerTwo\" id=\"teamOnePlayerTwo\" className=\"player-select\" onChange={changeTeamOnePlayerTwo}>\n                <option value=\"\">Välj spelare</option>\n                {listOfPlayers}\n              </select>\n              <i className=\"fas fa-chevron-down\"></i>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"add-team\">\n        <h3>Lag 2</h3>\n          <div className=\"player-select-container\">\n            <div className=\"select-wrapper\">\n              <select name=\"teamTwoPlayerTwo\" id=\"teamOnePlayerTwo\" className=\"player-select\" onChange={changeTeamTwoPlayerTwo}>\n                <option value=\"\">Välj spelare</option>\n                {listOfPlayers}\n              </select>\n              <i className=\"fas fa-chevron-down\"></i>\n            </div>\n          </div>\n          <div className=\"player-select-container\">\n            <div className=\"select-wrapper\">\n              <select name=\"teamTwoPlayerOne\" id=\"teamTwoPlayerOne\" className=\"player-select\" onChange={changeTeamTwoPlayerOne}>\n                <option value=\"\">Välj spelare</option>\n                {listOfPlayers}\n              </select>\n              <i className=\"fas fa-chevron-down\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"player-error\">\n        <span>{duplicatePlayerError ? playerErrorMessage : \"\"}</span>\n      </div>\n\n      <div className=\"add-games\">\n        <div className=\"add-game\">\n          <h4>Vunna game</h4>\n          <div className=\"game-select-container\">\n            <select name=\"teamOneGame\" id=\"teamOneGame\" className=\"game-select\" onChange={changeTeamOneGame} value={teamOneGames.toString()}>\n              <option value={99}>Game</option>\n              {listOfGameTeamOne}\n            </select>\n            <i className=\"fas fa-chevron-down\"></i>\n          </div>\n        </div>\n\n        <div className=\"add-game\">\n          <h4>Vunna game</h4>\n          <div className=\"game-select-container\">\n            <select name=\"teamTwoGame\" id=\"teamTwoGame\" className=\"game-select\" onChange={changeTeamTwoGame} value={teamTwoGames.toString()}>\n              <option value={99}>Game</option>\n              {listOfGameTeamTwo}\n            </select>\n            <i className=\"fas fa-chevron-down\"></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"game-error\">\n        <span>{missingGameError ? missingGameErrorMessage : \"\"}</span>\n        <span>{noWinnerError && !missingGameError? noWinnerErrorMessage : \"\"}</span>\n        <span>{invalidGameError && !missingGameError && !noWinnerError ? invalidGameErrorMEssage : \"\"}</span>\n      </div>\n\n      <div className=\"submit-button-container\">\n        <button type=\"submit\" onClick={sendNewMatchDataToParent}></button>\n        <div className=\"ball-container\">\n          <span>Registrera match</span>\n          <img src={ball} alt=\"tennis-ball\" className=\"ball\"/>\n        </div>\n      </div>\n\n      <div id=\"registering-game\">\n        {props.creatingGame && !props.matchRegistered? registeringGame : \"\"}\n        {gameRegistered ? registeredGame : \"\"}\n      </div>\n    </div>\n  );\n}","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/playedMatches/singlePlayedMatch/singlePlayedMatch.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/playedMatches/playedMatches.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieSettings/serieSettings.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieNavigation/serieNavigation.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/playedMatches/singlePlayedMatch/matchPlayerCard/matchPlayerCard.tsx",["157"],"import ronaldo from \"../../../../../../images/ronaldo.svg\";\nimport bale from \"../../../../../../images/bale.svg\";\nimport buffon from \"../../../../../../images/buffon.svg\";\nimport pepe from \"../../../../../../images/pepe.svg\";\nimport marcelo from \"../../../../../../images/marcelo.svg\";\nimport suarez from \"../../../../../../images/suarez.svg\";\n\nimport pics from \"../../../../../getProfilePictures\";\n\ninterface IMatchPlayerCardProps{\n    name: string;\n    standing: any;\n    profilePicture: string;\n}\n\nexport default function MatchPlayerCard(props: IMatchPlayerCardProps) {\n\n    let dude = ronaldo;\n\n\n    if (props.name === \"Hasse\") {\n        dude = buffon;\n    }\n    if (props.name === \"Jensa\") {\n        dude = pepe;\n    }\n    if (props.name === \"Generalen\") {\n        dude = suarez;\n    }\n    if (props.name === \"Burt\") {\n        dude = marcelo;\n    }\n    if (props.name === \"Jerka\") {\n        dude = bale;\n    }\n    if (props.name === \"Unde\") {\n        dude = ronaldo;\n    }\n\n    return(\n        <div className=\"player\">\n            <div className=\"player-image\"><img src={dude} alt=\"\"/></div>\n            <div className=\"player-info\">{props.name}</div>\n            <div className=\"standing\">{props.standing}</div>\n        </div> \n    ); \n\n\n}","/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/standings/standings.tsx",["158"],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieSettings/addPlayerToSerie/addPlayerToSerie.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieSettings/changeSerieName/changeSerieName.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/standings/playerStanding/playerStanding.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieSettings/addPlayerToSerie/playerSearchBar/playerSearchBar.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieSettings/addPlayerToSerie/playersToAdd/playersToAdd.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/serie/serieSettings/addPlayerToSerie/playersToAdd/singlePlayerToAdd/singlePlayerToAdd.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/series.tsx",["159"],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/noSerie/noSerie.tsx",[],"/Users/marcusenblom/Desktop/Paddelsidan/120Padel/client/src/components/series/allSeries/allSeries.tsx",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"168","line":11,"column":10,"nodeType":"166","messageId":"167","endLine":11,"endColumn":14},{"ruleId":"160","replacedBy":"169"},{"ruleId":"162","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":33,"column":6,"nodeType":"173","endLine":33,"endColumn":72,"suggestions":"174"},{"ruleId":"171","severity":1,"message":"175","line":33,"column":6,"nodeType":"173","endLine":33,"endColumn":19,"suggestions":"176"},{"ruleId":"164","severity":1,"message":"177","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":12},{"ruleId":"164","severity":1,"message":"178","line":16,"column":5,"nodeType":"166","messageId":"167","endLine":16,"endColumn":19},{"ruleId":"164","severity":1,"message":"179","line":4,"column":21,"nodeType":"166","messageId":"167","endLine":4,"endColumn":36},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.",["180"],["181"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSerieData'. Either include it or remove the dependency array.","ArrayExpression",["182"],"React Hook useEffect has a missing dependency: 'clearState'. Either include it or remove the dependency array.",["183"],"'pics' is defined but never used.","'componentReady' is assigned a value but never used.","'UserSeriesModel' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [props.serieId, newPlayerAdded, matchRegistered, serieNameChanged, fetchSerieData]",{"range":"188","text":"189"},"Update the dependencies array to be: [clearState, gameCreated]",{"range":"190","text":"191"},[1300,1366],"[props.serieId, newPlayerAdded, matchRegistered, serieNameChanged, fetchSerieData]",[1330,1343],"[clearState, gameCreated]"]